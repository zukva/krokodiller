version: "3.9"

services:
    client:
        container_name: prakticum-client
        image: cr.yandex/crpl258oggd4r8d4v1dm/prakticum-client
        platform: linux/amd64
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
              CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        depends_on:
          - server
          - postgres
        ports:
            - "${CLIENT_PORT}:${CLIENT_PORT}"
        environment:
          - CLIENT_PORT=${CLIENT_PORT}
          - SERVER_PORT=${SERVER_PORT}
          - NODE_ENV=production
    server:
        container_name: prakticum-server
        image: cr.yandex/crpl258oggd4r8d4v1dm/prakticum-server
        platform: linux/amd64
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        depends_on:
          - postgres
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
          SERVER_PORT: ${SERVER_PORT}
        env_file:
          - ./.env

    balancer:
        container_name: balancer
        image: cr.yandex/crpl258oggd4r8d4v1dm/balancer
        platform: linux/amd64
        build:
          dockerfile: Dockerfile.balancer
        restart: always
        depends_on:
          - server
          - client
          - postgres
        ports:
          - "80:80"
          - "443:443"

    postgres:
      image: postgres:14
#      platform: linux/amd64
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./tmp/pgdata:/var/lib/postgresql/data
