events {
}

http {
    include mime.types;
    types {
        # here are additional types
        audio/wav wav;
    }
    server {
      server_name localhost;
      ssi on;
      listen 80;
      return 301 https://$server_name$request_uri;
    }
    server {
        server_name localhost;
        listen [::]:443 ssl backlog=2048 ipv6only=off;
        access_log off;

       ssi on;
       add_header Strict-Transport-Security "max-age=31536000;";
       ssl_ciphers HIGH:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!EXP:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
       ssl_prefer_server_ciphers on;
       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

       ssl_certificate /etc/ssl/cert.pem; # Путь до сертификата
       ssl_certificate_key /etc/ssl/privkey.pem; # Путь до ключа

        # Будет кешировать информацию о тех файлах, которые были использованы хотя бы 5раз
        open_file_cache_min_uses 5;
        #Кушируем информацию о 404 файлах
        open_file_cache_errors on;

        sendfile        on;
        #Позволяем ngnix отправлять заголовки в одном пакете после получения данных sendfile
        tcp_nopush on;
        #Включаем GZIP
        gzip on;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

        #Уменьшим ожидание перед закрытием соединения и макс keepalive  запросов от 1 клиента
        keepalive_timeout 10;
        keepalive_requests 50;

        #Сбрасываем соединения с подвисшими клиентами клиентами
        reset_timedout_connection on;

        #10 сек на ожидание тела запроса от клиента
        client_body_timeout 10;

        #Сбрасываем соединение спустя секунду после обрыва чтения запроса
        send_timeout 1;

        add_header X-Content-Type-Options "nosniff"; # На весь сервер

        #Проксируем запросы на рендер к node_frontend
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_pass http://prakticum-client:3000;
            proxy_redirect off;
        }

        location /api-p {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_pass http://prakticum-server:3001;
            proxy_redirect off;
        }

        location /api {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_pass http://prakticum-server:3001;
            proxy_redirect off;
        }
    }
}
